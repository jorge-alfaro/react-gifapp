{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","className","onSubmit","e","preventDefault","trim","length","cate","type","value","onChange","target","placeholder","getGifts","category","a","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAchD,OACE,qBAAKC,UAAU,kBAAf,SACE,sBAAMC,SATW,SAACC,GACpBA,EAAEC,iBACEL,EAAWM,OAAOC,OAAS,IAC7BT,GAAc,SAACU,GAAD,OAAWR,GAAX,mBAA0BQ,OACxCP,EAAc,MAKgBC,UAAU,SAAxC,SACE,uBACEO,KAAK,SACLC,MAAOV,EACPW,SAjBkB,SAACP,GACzBH,EAAcG,EAAEQ,OAAOF,QAiBjBG,YAAY,YACZX,UAAU,2B,+BCzBPY,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UACpDH,GAFoB,+DAICI,MAAMF,GAJP,cAIhBG,EAJgB,gBAKCA,EAASC,OALV,uBAKdC,EALc,EAKdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAXf,kBAefM,GAfe,4CAAH,sDCERO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEnC,OACE,sBAAKf,UAAU,6CAAf,UACE,qBAAK6B,IAAKd,EAAKe,IAAKL,IACpB,mBAAGzB,UAAU,YAAb,SAA0ByB,QCJjB,SAASM,EAAT,GAAgC,IAAblB,EAAY,EAAZA,SAAY,ECAlB,SAACA,GAAc,IAAD,EACdhB,mBAAS,CACjCuB,KAAM,GACNY,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRvB,EAASC,GAAUuB,MAAK,SAACC,GACvBH,EAAS,CACPd,KAAMiB,EACNL,SAAS,SAGZ,CAACnB,IAEGoB,EDd2BK,CAAazB,GAAjCa,EAD8B,EACpCN,KAAcY,EADsB,EACtBA,QAEtB,OACE,qCACE,qBAAIhC,UAAU,sCAAd,eAAuDa,EAAvD,QACCmB,GACC,mBAAGhC,UAAU,mCAAb,wBAGF,qBAAKA,UAAU,YAAf,SACG0B,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,aAA0BA,IAAKA,GAASA,GAAtBA,EAAIC,YEXzB,IAAMe,EAAe,WAAO,IAAD,EACI1C,mBAAS,CAAC,YADd,mBACzB2C,EADyB,KACb5C,EADa,KAGhC,OACE,qCACE,qBAAKI,UAAU,cAAf,SACE,+CAGF,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,CAAaJ,cAAeA,IAC5B,uBAEA,6BACG4C,EAAWlB,KAAI,SAACT,GAAD,OACd,cAACkB,EAAD,CAAwBlB,SAAUA,GAApBA,e,MCd1B4B,IAASC,OACP,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.bac99dca.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cate) => [inputValue, ...cate]);\r\n      setinputValue(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <form onSubmit={handleSubmit} className=\"d-flex\">\r\n        <input\r\n          type=\"search\"\r\n          value={inputValue}\r\n          onChange={handleInputChange}\r\n          placeholder=\"Search...\"\r\n          className=\"form-control me-2\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifts = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=15&api_key=1N3WBJbyoe47qxWaYp4iluU9i92kQpEW`;\r\n  const response = await fetch(url);\r\n  const { data } = await response.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  //   console.log({ title, url });\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeInDown\">\r\n      <img src={url} alt={title} />\r\n      <p className=\"card-name\">{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport default function GifGrid({ category }) {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__bounceIn\">- {category} -</h3>\r\n      {loading && (\r\n        <p className=\"animate__animated animate__swing\">Loading...</p>\r\n      )}\r\n\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} img={img} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifts } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifts(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport GifGrid from \"./GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n  const [categories, setCategories] = useState([\"Nisekoi\"]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"block-title\">\r\n        <h2>Search GIFs</h2>\r\n        {/* <img src=\"/assets/h.png\" alt=\"media\" className=\"img-top\" /> */}\r\n      </div>\r\n      <div className=\"content\">\r\n        <AddCategory setCategories={setCategories} />\r\n        <hr />\r\n\r\n        <ol>\r\n          {categories.map((category) => (\r\n            <GifGrid key={category} category={category} />\r\n          ))}\r\n        </ol>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GifExpertApp } from \"./components/GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <GifExpertApp />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}